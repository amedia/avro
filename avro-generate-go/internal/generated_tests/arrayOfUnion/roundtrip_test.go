<<<<<<< HEAD
// Code generated by generatetestcode.go; DO NOT EDIT.

package arrayOfUnion

import (
	"testing"

	"github.com/rogpeppe/avro/avro-generate-go/internal/testutil"
)

var test = testutil.RoundTripTest{
	InDataJSON: `{
                "F": [
                    {
                        "int": 1
                    },
                    {
                        "string": "hello"
                    }
                ]
            }`,
	OutDataJSON: `{
                "F": [
                    {
                        "int": 1
                    },
                    {
                        "string": "hello"
                    }
                ]
            }`,
	InSchema: `{
                "name": "R",
                "type": "record",
                "fields": [
                    {
                        "name": "F",
                        "type": {
                            "type": "array",
                            "items": [
                                "int",
                                "string"
                            ]
                        }
                    }
                ]
            }`,
	OutSchema: `{
                "name": "R",
                "type": "record",
                "fields": [
                    {
                        "name": "F",
                        "type": {
                            "type": "array",
                            "items": [
                                "int",
                                "string"
                            ]
                        }
                    }
                ]
            }`,
	GoType: new(R),
}

func TestGeneratedCode(t *testing.T) {
	test.Test(t)
}
||||||| merged common ancestors
=======
// Code generated by generatetestcode.go; DO NOT EDIT.

package arrayOfUnion

import (
	"testing"

	"github.com/rogpeppe/avro/avro-generate-go/internal/testutil"
)

var test = testutil.RoundTripTest{
	InDataJSON: `{
                "F": [
                    1,
                    "hello"
                ]
            }`,
	OutDataJSON: `{
                "F": [
                    1,
                    "hello"
                ]
            }`,
	InSchema: `{
                "name": "R",
                "type": "record",
                "fields": [
                    {
                        "name": "F",
                        "type": {
                            "type": "array",
                            "items": [
                                "int",
                                "string"
                            ]
                        }
                    }
                ]
            }`,
	OutSchema: `{
                "name": "R",
                "type": "record",
                "fields": [
                    {
                        "name": "F",
                        "type": {
                            "type": "array",
                            "items": [
                                "int",
                                "string"
                            ]
                        }
                    }
                ]
            }`,
	GoType: new(R),
}

func TestGeneratedCode(t *testing.T) {
	test.Test(t)
}
>>>>>>> wip
